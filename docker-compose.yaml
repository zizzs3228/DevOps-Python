services:
  bot:
    container_name: bot
    build: ./bot
    environment:
      HOST: ${RM_HOST}
      PORT: ${RM_PORT}
      USER: ${RM_USER}
      PASSWORD: ${RM_PASSWORD}
      TOKEN: ${TOKEN}
      DBHOST: ${DB_HOST}
      DBPORT: ${DB_PORT}
      DBUSER: ${DB_USER}
      DBPASSWORD: ${DB_PASSWORD}
      DBNAME: ${DB_DATABASE}
    env_file:
      - .env
    volumes:
      - ./bot/logs:/bot/logs

  db:
    container_name: db
    build: 
      context: ./db
      args:
        REPLUSER: ${DB_REPL_USER}
        REPLPASSWORD: ${DB_REPL_PASSWORD}
        DBNAME: ${DB_DATABASE}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    env_file:
      - .env
    volumes:
      - db:/var/lib/postgresql/data/

  db_repl:
    container_name: db_repl
    build: 
      context: ./db_repl
      args:
        PGUSER: ${DB_REPL_USER}
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGUSER: ${DB_REPL_USER}
      PGPASSWORD: ${DB_REPL_PASSWORD}
    env_file:
      - .env
    depends_on:
      - db

volumes:
  db: